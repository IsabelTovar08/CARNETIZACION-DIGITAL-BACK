// <auto-generated />
using System;
using Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Forms", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Formulario para generar un nuevo carnet digital",
                            IsDeleted = false,
                            Name = "Crear Carnet",
                            Url = "/formulario"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Formulario para validar el correo del usuario",
                            IsDeleted = false,
                            Name = "Validar Correo",
                            Url = "/formulario"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Formulario donde se visualiza el carnet",
                            IsDeleted = false,
                            Name = "Ver Carnet",
                            Url = "/formulario"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Formulario para registrar y consultar asistencia",
                            IsDeleted = false,
                            Name = "Control de Asistencia",
                            Url = "/formulario"
                        });
                });

            modelBuilder.Entity("Entity.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Modules", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Gestión y emisión de carnets digitales",
                            IsDeleted = false,
                            Name = "Carnetización"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Validación de identidad y correos",
                            IsDeleted = false,
                            Name = "Validación"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Módulo para control de asistencia en eventos/clases",
                            IsDeleted = false,
                            Name = "Asistencia"
                        });
                });

            modelBuilder.Entity("Entity.Models.ModuleForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("ModuleId", "FormId")
                        .IsUnique();

                    b.ToTable("ModuleForms", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FormId = 1,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 2,
                            FormId = 2,
                            IsDeleted = false,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 3,
                            FormId = 3,
                            IsDeleted = false,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 4,
                            FormId = 4,
                            IsDeleted = false,
                            ModuleId = 3
                        });
                });

            modelBuilder.Entity("Entity.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Permissions", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Puede crear nuevos registros",
                            IsDeleted = false,
                            Name = "crear"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Puede editar registros existentes",
                            IsDeleted = false,
                            Name = "editar"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Puede validar datos (correo, QR)",
                            IsDeleted = false,
                            Name = "validar"
                        });
                });

            modelBuilder.Entity("Entity.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Identification")
                        .IsUnique()
                        .HasFilter("[Identification] IS NOT NULL");

                    b.ToTable("People", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Carlos",
                            Identification = "1234567890",
                            IsDeleted = false,
                            LastName = "Funcionario",
                            Phone = "3200001111"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Laura",
                            Identification = "9876543210",
                            IsDeleted = false,
                            LastName = "Estudiante",
                            Phone = "3100002222"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Ana",
                            Identification = "1122334455",
                            IsDeleted = false,
                            LastName = "Administrador",
                            Phone = "3001234567"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "José",
                            Identification = "9988776655",
                            IsDeleted = false,
                            LastName = "Usuario",
                            Phone = "3151234567"
                        });
                });

            modelBuilder.Entity("Entity.Models.RolFormPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RolId", "FormId", "PermissionId")
                        .IsUnique();

                    b.ToTable("RolFormPermissions", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FormId = 1,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 3
                        },
                        new
                        {
                            Id = 2,
                            FormId = 2,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 3
                        },
                        new
                        {
                            Id = 3,
                            FormId = 3,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 3
                        });
                });

            modelBuilder.Entity("Entity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rol para personal autorizado a validar y emitir carnets",
                            IsDeleted = false,
                            Name = "Funcionario"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Rol con permisos limitados a visualización de carnet y asistencia",
                            IsDeleted = false,
                            Name = "Estudiante"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Acceso total al sistema de carnetización digital",
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Acceso restringido, solo visualización",
                            IsDeleted = false,
                            Name = "Usuario"
                        });
                });

            modelBuilder.Entity("Entity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PersonId");

                    b.ToTable("Users", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "funcionario@carnet.edu",
                            IsDeleted = false,
                            Password = "123",
                            PersonId = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laura.estudiante@correo.com",
                            IsDeleted = false,
                            Password = "L4d!Estudiante2025",
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@carnet.edu",
                            IsDeleted = false,
                            Password = "Adm!nCarnet2025",
                            PersonId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "usuario@carnet.edu",
                            IsDeleted = false,
                            Password = "Usr!Carnet2025",
                            PersonId = 4
                        });
                });

            modelBuilder.Entity("Entity.Models.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("RolId", "UserId")
                        .IsUnique();

                    b.ToTable("UserRoles", "ModelSecurity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            RolId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            RolId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            RolId = 4,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Entity.Models.ModuleForm", b =>
                {
                    b.HasOne("Entity.Models.Form", "Form")
                        .WithMany("ModuleForm")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.Module", "Module")
                        .WithMany("ModuleForm")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Entity.Models.RolFormPermission", b =>
                {
                    b.HasOne("Entity.Models.Form", "Form")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.Permission", "Permission")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.Role", "Rol")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Permission");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entity.Models.User", b =>
                {
                    b.HasOne("Entity.Models.Person", "Person")
                        .WithMany("Users")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Entity.Models.UserRoles", b =>
                {
                    b.HasOne("Entity.Models.Role", "Rol")
                        .WithMany("UserRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Models.Form", b =>
                {
                    b.Navigation("ModuleForm");

                    b.Navigation("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Models.Module", b =>
                {
                    b.Navigation("ModuleForm");
                });

            modelBuilder.Entity("Entity.Models.Permission", b =>
                {
                    b.Navigation("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Models.Person", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entity.Models.Role", b =>
                {
                    b.Navigation("RolFormPermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Entity.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
